(()=>{"use strict";const e=(()=>{const e=[];return{get:()=>e,set:t=>{e.push(...t)}}})(),t=(e,t,n)=>{if(e.length>0){const s=document.getElementById("unorderedList"),i=document.getElementById("cardView");i.classList.contains("d-none")&&(i.classList.remove("d-none"),i.insertAdjacentHTML("afterbegin",`<h1>Total Duplicate Recoreds: ${e.length}</h1>`)),s.childElementCount>0&&s.replaceChildren();for(let i=n;i>=t;i--)s.insertAdjacentHTML("afterBegin",`<li>${e[i]}</li>`)}},n=document.getElementById("formFileMultiple"),s=document.getElementById("next"),i=document.getElementById("prev"),a=(()=>{let n=0,s=9;return i=>{if("next"===i.target.name)n+=10,s+=10;else{if(!(n>0))return void alert("No more items to go back");n-=10,s-=10}const a=e.get();t(a,n,s)}})();n.addEventListener("change",(async n=>{let s;try{s=await(async e=>new Promise(((t,n)=>{const s=e.target.files[0];"application/json"!==s.type&&n("Invalid Data"),console.log("inputFile",s);const i=new FileReader;i.readAsDataURL(s),i.onload=e=>{if(e&&e.target&&e.target.result){const n=JSON.parse(atob(e.target.result.split(",")[1]));console.log("file",n),t(n)}},i.onerror=e=>{n(e)}})))(n)}catch(e){alert("Invalid file")}const i=(e=>{const t=[],n=new Map;return e.forEach((e=>{if(e.hasOwnProperty("name")&&e.hasOwnProperty("address")&&e.hasOwnProperty("zip"))if(null===e.name||""===e.name)t.push(e.id);else if(null===e.address||""===e.address)t.push(e.id);else if(null!==e.zip&&""!==e.zip&&/(^\d{5}$)|(^\d{5}-\d{4}$)/.test(e.zip)){const t=Object.assign({},e);delete t.id;const s=JSON.stringify(t);n.has(s)||n.set(s,1)}else t.push(e.id);else t.push(e.id)})),t})(s);e.set(i),t(i,0,9)})),s.addEventListener("click",a),i.addEventListener("click",a)})();